// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  username String @unique
  password String
  role     String @default("SELLER") // ADMINISTRATOR

  Order Order[]

  @@map("users")
}

model Customer {
  id      Int     @id @default(autoincrement())
  name    String
  email   String?
  phone   String?
  balance Float   @default(0)

  address Address?
  Order   Order[]

  @@map("customers")
}

model Address {
  id           Int     @id @default(autoincrement())
  city         String?
  neighborhood String?
  street       String?
  number       String?
  complement   String?
  reference    String?

  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId Int      @unique

  @@map("addresses")
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String
  brand         String
  unit          String
  stockQuantity Decimal  @default(0.00)
  costPrice     Decimal
  profitMargin  Decimal
  profit        Decimal
  salePrice     Decimal
  createdAt     DateTime

  OrderItem OrderItem[]

  @@map("products")
}

model Order {
  id            Int         @id @default(autoincrement())
  customerId    Int?
  sellerId      Int
  notes         String?
  type          String
  status        String
  total         Decimal
  discount      Decimal     @default(0.00)
  paymentMethod String?
  paid          Boolean     @default(false)
  installments  Int? // Usado quando pagamento em cartão de crédito
  amountPaid    Decimal? // Usado quando pagamento em dinheiro
  createdAt     DateTime    @default(now())
  customer      Customer?   @relation(fields: [customerId], references: [id])
  seller        User        @relation(fields: [sellerId], references: [id])
  items         OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Decimal
  unitPrice Decimal
  total     Decimal

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}
